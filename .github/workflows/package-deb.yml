name: Debian packages

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  release:
    types: 
     - published
     - prereleased

jobs:
  build-pulse-amd64:
    runs-on: ubuntu-22.04
    container: ubuntu:22.04
    strategy:
      matrix:
        flavor: [full, headless]

    steps:
    - name: Setup APT
      run:  echo 'APT::Acquire::Retries "4";' > /etc/apt/apt.conf.d/80-retries
    
    - name: Run APT updates
      run: |
        apt update
        apt upgrade -y git
        apt full-upgrade -y
    
    - uses: actions/checkout@v4
      with:
        ref: 'master'
        submodules: 'recursive'
 
    - name: Install dependencies (PulseAudio flavor)
      run: |
        export PKG_CONFIG_PATH="/usr/lib/pkgconfig:$PATH"
        echo 'tzdata tzdata/Areas select Europe' | debconf-set-selections
        echo 'tzdata tzdata/Zones/Europe select Paris' | debconf-set-selections
        DEBIAN_FRONTEND="noninteractive" 
        apt install -y tree make gcc g++ lftp pkg-config libarchive-dev qt6-base-private-dev qt6-base-dev libqt6svg6-dev libgl-dev libqt6svg6-dev libglibmm-2.4-dev libglib2.0-dev libpulse-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
     
    - name: Initialize project (PulseAudio/full)
      if: matrix.flavor == 'full'
      run: qmake6 JDSP4Linux.pro "CONFIG += CI" "CONFIG += USE_PULSEAUDIO"

    - name: Initialize project (PulseAudio/headless)
      if: matrix.flavor == 'headless'
      run: qmake6 JDSP4Linux.pro "CONFIG += CI" "CONFIG += USE_PULSEAUDIO" "CONFIG+=HEADLESS"

    - name: Build
      run: |
        make

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jamesdsp-pulse-${{ matrix.flavor }}_portable_linux64
        path: src/jamesdsp
        
  build-pipewire-amd64:
    runs-on: ubuntu-22.04
    container: ubuntu:22.04
    strategy:
      matrix:
        flavor: [full, headless]

    steps:
    - name: Setup APT
      run:  echo 'APT::Acquire::Retries "4";' > /etc/apt/apt.conf.d/80-retries
    
    - name: Run APT updates
      run: |
        apt update
        apt upgrade -y git

    - uses: actions/checkout@v4
      with:
        ref: 'master'
        submodules: 'recursive'

    - name: Install dependencies (PipeWire flavor)
      run: |
        export PKG_CONFIG_PATH="/usr/lib/pkgconfig:$PATH"
        echo 'tzdata tzdata/Areas select Europe' | debconf-set-selections
        echo 'tzdata tzdata/Zones/Europe select Paris' | debconf-set-selections
        DEBIAN_FRONTEND="noninteractive" apt install -y libarchive-dev tree make gcc g++ lftp pkg-config qt6-base-private-dev qt6-base-dev libqt6svg6-dev libgl-dev libglibmm-2.4-dev libglib2.0-dev libpipewire-0.3-dev
      
    - name: Initialize project (PW/full)
      if: matrix.flavor == 'full'
      run: qmake6 JDSP4Linux.pro "CONFIG += CI"

    - name: Initialize project (PW/headless)
      if: matrix.flavor == 'headless'
      run: qmake6 JDSP4Linux.pro "CONFIG += CI" "CONFIG+=HEADLESS"


    - name: Build
      run: |
        make -j4
        strip --strip-unneeded src/jamesdsp
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jamesdsp-pipewire-${{ matrix.flavor }}_portable_linux64
        path: src/jamesdsp
    
  build-deb-amd64:
    runs-on: ubuntu-22.04
    needs: [build-pulse-amd64, build-pipewire-amd64]
    strategy:
      matrix:
        flavor: [pulse, pipewire]
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        ref: 'master'
        
    - name: Prepare version information (1/3)
      uses: oprypin/find-latest-tag@v1
      with:
        repository: Audio4Linux/JDSP4Linux
        releases-only: false
      id: last_release  
    - name: Prepare version information (2/3)
      uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 6
    - name: Prepare version information (3/3)
      run: echo '::set-output name=version::${{steps.last_release.outputs.tag}}-${{steps.short-sha.outputs.sha}}'
      id: version
      
    - name: Download artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: jamesdsp-${{ matrix.flavor }}-full_portable_linux64
      
    - name: Build DEB package
      run: |
        chmod +x ./meta/build_deb_package.sh
        ./meta/build_deb_package.sh ${{steps.version.outputs.version}} ${{ matrix.flavor }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: jamesdsp-${{ matrix.flavor }}_${{steps.version.outputs.version}}_ubuntu22-04_amd64.deb
        path: jamesdsp-${{ matrix.flavor }}_${{steps.version.outputs.version}}_ubuntu22-04_amd64.deb

  attach-to-release:
    runs-on: ubuntu-latest
    needs: [build-deb-amd64]
    strategy:
      matrix:
        flavor: [pulse, pipewire]
        
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch' 
    
    steps:
    - name: Prepare version information (1/3)
      uses: oprypin/find-latest-tag@v1
      with:
        repository: Audio4Linux/JDSP4Linux
        releases-only: true
      id: last_release  
      
    - name: Prepare version information (2/3)
      uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 6
    - name: Prepare version information (3/3)
      run: echo '::set-output name=version::${{steps.last_release.outputs.tag}}-${{steps.short-sha.outputs.sha}}'
      id: version
      
    - name: Download package artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: jamesdsp-${{ matrix.flavor }}_${{steps.version.outputs.version}}_ubuntu22-04_amd64.deb
      
    - uses: AButler/upload-release-assets@v2.0
      with:
        files: '*.deb'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
